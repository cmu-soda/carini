{
    "preds"  :  [
        "BecLeaderTerm[s][t]",
        "LeaderTerm[t]",
        "ActiveTerm[t]",
        "LeaderTerm[t2]",
        "t2 <= t",
        "ClReq[s][t]",
        "Fluent2[idx][t]",
        "CommitQuorum[q]",
        "ActiveQuorum[q2]",
        "CommitQuorum[q]",
        "Fluent2[idx3][t3]",
        "s2 \\in q2",
        "idx \\in DOMAIN log[s] /\\ log[s][idx] = t",
        "idx \\in DOMAIN log[s] /\\ log[s][idx] = t2",
        "idx \\in DOMAIN log[s2] /\\ log[s2][idx] = t",
        "idx \\in DOMAIN log[s] => (log[s][idx] <= t)",
        "idx3 \\in DOMAIN log[s] /\\ log[s][idx3] = t",
        "idx3 \\in DOMAIN log[s] /\\ log[s][idx3] = t3",
        "idx \\in (DOMAIN log[s] \\cap DOMAIN log[s2]) /\\ log[s][idx] = t /\\ log[s2][idx] = t",
        "idx \\in (DOMAIN log[s] \\cap DOMAIN log[s2]) /\\ log[s][idx] = log[s2][idx]",
        "(idx \\in DOMAIN log[s] /\\ idx2 \\in DOMAIN log[s]) => (log[s][idx] <= log[s][idx2])",
        "idx2 \\in (DOMAIN log[s] \\cap DOMAIN log[s2]) => log[s][idx2] = log[s2][idx2]",
        "CommitTerm[t]",
        "Fluent2[idx3][t]",
        "ActiveQuorum[q]",
        "s \\in q",
        "BecLeaderTerm[n][t3]",
        "ActiveTerm[t3]",
        "Len(log[s]) > 0",
        "LeaderTerm[t3]",
        "CommitTerm[t3]",
        "CommitQuorum[q2]",
        "Fluent2[idx][t2]",
        "BecLeaderTerm[s2][t]",
        "s2 \\in q",
        "CanVoteForOplog(s,s2,t)",
        "BecLeaderTerm[s3][t3]",
        "IsPrefix(log[s], log[s3])",
        "IsPrefix(log[s], log[n])",
        "t2 < t",
        "BecLeaderTerm[s][t2]",
        "Len(log[s]) <= Len(log[s2])",

        "idx < idx2",
        "idx2 < idx",
        "s = s2",

        "idx2 \\in (DOMAIN log[s] \\cap DOMAIN log[s]) => (log[s][idx2] <= log[s2][idx2])",
        "idx2 \\in (DOMAIN log[s] \\cap DOMAIN log[s]) /\\ (log[s][idx2] <= log[s2][idx2])"
    ],
    "preds_alt" : [],
    "safety"  :  "Safety",
    "constants"  : [
        "CONSTANTS" ,
        "Server = {n1,n2,n3}",
        "FinNat = {1,2,3}",
        "n1=n1",
        "n2=n2",
        "n3=n3"
    ],
    "constraint"  :  "CONSTRAINT StateConstraint",
    "quant_inv"  :  "\\A s,s3 \\in Server : \\A idx,idx2,t,t2 \\in FinNat : \\A q \\in Quorums : \\E q2 \\in Quorums : \\E n \\in Server : \\E idx3,t3 \\in FinNat : \\A s2 \\in Server : ",
    "quant_inv_alt"  :  null,
    "quant_vars": ["I","J","N","M"],
    "model_consts"  :  "CONSTANT n1,n2,n3",
    "symmetry" : true,
    "typeok"  :  "TypeOKRand",
    "simulate"  :  true
}
