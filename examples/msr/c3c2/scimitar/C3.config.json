{
    "preds"  :  [
        "t1 \\in DOMAIN log[s1]",
        "t1 \\in DOMAIN log[s2]",
        "t1 \\in DOMAIN log[s3]",
        "t1 \\in DOMAIN log[s4]",
        "t2 \\in DOMAIN log[s1]",
        "t2 \\in DOMAIN log[s2]",
        "t2 \\in DOMAIN log[s3]",
        "t2 \\in DOMAIN log[s4]",
        "t3 \\in DOMAIN log[s1]",
        "t3 \\in DOMAIN log[s2]",
        "t3 \\in DOMAIN log[s3]",
        "t3 \\in DOMAIN log[s4]",
        "t4 \\in DOMAIN log[s1]",
        "t4 \\in DOMAIN log[s2]",
        "t4 \\in DOMAIN log[s3]",
        "t4 \\in DOMAIN log[s4]",

        "t1 \\in DOMAIN log[s1] => log[s1][t1] = t2",
        "t1 \\in DOMAIN log[s2] => log[s2][t1] = t2",
        "t1 \\in DOMAIN log[s3] => log[s3][t1] = t2",
        "t1 \\in DOMAIN log[s4] => log[s4][t1] = t2",
        "t1 \\in DOMAIN log[s1] => log[s1][t1] = t3",
        "t1 \\in DOMAIN log[s2] => log[s2][t1] = t3",
        "t1 \\in DOMAIN log[s3] => log[s3][t1] = t3",
        "t1 \\in DOMAIN log[s4] => log[s4][t1] = t3",
        "t1 \\in DOMAIN log[s1] => log[s1][t1] = t4",
        "t1 \\in DOMAIN log[s2] => log[s2][t1] = t4",
        "t1 \\in DOMAIN log[s3] => log[s3][t1] = t4",
        "t1 \\in DOMAIN log[s4] => log[s4][t1] = t4",

        "t2 \\in DOMAIN log[s1] => log[s1][t2] = t1",
        "t2 \\in DOMAIN log[s2] => log[s2][t2] = t1",
        "t2 \\in DOMAIN log[s3] => log[s3][t2] = t1",
        "t2 \\in DOMAIN log[s4] => log[s4][t2] = t1",
        "t2 \\in DOMAIN log[s1] => log[s1][t2] = t3",
        "t2 \\in DOMAIN log[s2] => log[s2][t2] = t3",
        "t2 \\in DOMAIN log[s3] => log[s3][t2] = t3",
        "t2 \\in DOMAIN log[s4] => log[s4][t2] = t3",
        "t2 \\in DOMAIN log[s1] => log[s1][t2] = t4",
        "t2 \\in DOMAIN log[s2] => log[s2][t2] = t4",
        "t2 \\in DOMAIN log[s3] => log[s3][t2] = t4",
        "t2 \\in DOMAIN log[s4] => log[s4][t2] = t4",

        "t3 \\in DOMAIN log[s1] => log[s1][t3] = t1",
        "t3 \\in DOMAIN log[s2] => log[s2][t3] = t1",
        "t3 \\in DOMAIN log[s3] => log[s3][t3] = t1",
        "t3 \\in DOMAIN log[s4] => log[s4][t3] = t1",
        "t3 \\in DOMAIN log[s1] => log[s1][t3] = t2",
        "t3 \\in DOMAIN log[s2] => log[s2][t3] = t2",
        "t3 \\in DOMAIN log[s3] => log[s3][t3] = t2",
        "t3 \\in DOMAIN log[s4] => log[s4][t3] = t2",
        "t3 \\in DOMAIN log[s1] => log[s1][t3] = t4",
        "t3 \\in DOMAIN log[s2] => log[s2][t3] = t4",
        "t3 \\in DOMAIN log[s3] => log[s3][t3] = t4",
        "t3 \\in DOMAIN log[s4] => log[s4][t3] = t4",

        "t4 \\in DOMAIN log[s1] => log[s1][t4] = t1",
        "t4 \\in DOMAIN log[s2] => log[s2][t4] = t1",
        "t4 \\in DOMAIN log[s3] => log[s3][t4] = t1",
        "t4 \\in DOMAIN log[s4] => log[s4][t4] = t1",
        "t4 \\in DOMAIN log[s1] => log[s1][t4] = t2",
        "t4 \\in DOMAIN log[s2] => log[s2][t4] = t2",
        "t4 \\in DOMAIN log[s3] => log[s3][t4] = t2",
        "t4 \\in DOMAIN log[s4] => log[s4][t4] = t2",
        "t4 \\in DOMAIN log[s1] => log[s1][t4] = t3",
        "t4 \\in DOMAIN log[s2] => log[s2][t4] = t3",
        "t4 \\in DOMAIN log[s3] => log[s3][t4] = t3",
        "t4 \\in DOMAIN log[s4] => log[s4][t4] = t3",

        "t1 = t2",
        "t1 = t3",
        "t1 = t4",
        "t2 = t3",
        "t2 = t4",
        "t3 = t4",
        "t1 < t2",
        "t1 < t3",
        "t1 < t4",
        "t2 < t1",
        "t2 < t3",
        "t2 < t4",
        "t3 < t1",
        "t3 < t2",
        "t3 < t4",
        "t4 < t1",
        "t4 < t2",
        "t4 < t3",

        "s1 = s2",
        "s1 = s3",
        "s1 = s4",
        "s2 = s3",
        "s2 = s4",
        "s3 = s4",
        "s1 \\in q1",
        "s1 \\in q2",
        "s1 \\in q3",
        "s2 \\in q1",
        "s2 \\in q2",
        "s2 \\in q3",
        "s3 \\in q1",
        "s3 \\in q2",
        "s3 \\in q3",
        "s4 \\in q1",
        "s4 \\in q2",
        "s4 \\in q3",
        "IsPrefix(log[s1],log[s2])",
        "IsPrefix(log[s1],log[s3])",
        "IsPrefix(log[s1],log[s4])",
        "IsPrefix(log[s2],log[s1])",
        "IsPrefix(log[s2],log[s3])",
        "IsPrefix(log[s2],log[s4])",
        "IsPrefix(log[s3],log[s1])",
        "IsPrefix(log[s3],log[s2])",
        "IsPrefix(log[s3],log[s4])",
        "IsPrefix(log[s4],log[s1])",
        "IsPrefix(log[s4],log[s2])",
        "IsPrefix(log[s4],log[s3])",
        "Len(log[s1]) > 0",
        "Len(log[s2]) > 0",
        "Len(log[s3]) > 0",
        "Len(log[s4]) > 0",
        "Len(log[s1]) = t1",
        "Len(log[s1]) = t2",
        "Len(log[s1]) = t3",
        "Len(log[s1]) = t4",
        "Len(log[s2]) = t1",
        "Len(log[s2]) = t2",
        "Len(log[s2]) = t3",
        "Len(log[s2]) = t4",
        "Len(log[s3]) = t1",
        "Len(log[s3]) = t2",
        "Len(log[s3]) = t3",
        "Len(log[s3]) = t4",
        "Len(log[s4]) = t1",
        "Len(log[s4]) = t2",
        "Len(log[s4]) = t3",
        "Len(log[s4]) = t4",
        "CanVoteForOplog(s1,s2,t1)",
        "CanVoteForOplog(s1,s3,t1)",
        "CanVoteForOplog(s1,s4,t1)",
        "CanVoteForOplog(s2,s1,t1)",
        "CanVoteForOplog(s2,s3,t1)",
        "CanVoteForOplog(s2,s4,t1)",
        "CanVoteForOplog(s3,s1,t1)",
        "CanVoteForOplog(s3,s2,t1)",
        "CanVoteForOplog(s3,s4,t1)",
        "CanVoteForOplog(s4,s1,t1)",
        "CanVoteForOplog(s4,s2,t1)",
        "CanVoteForOplog(s4,s3,t1)",
        "CanVoteForOplog(s1,s2,t2)",
        "CanVoteForOplog(s1,s3,t2)",
        "CanVoteForOplog(s1,s4,t2)",
        "CanVoteForOplog(s2,s1,t2)",
        "CanVoteForOplog(s2,s3,t2)",
        "CanVoteForOplog(s2,s4,t2)",
        "CanVoteForOplog(s3,s1,t2)",
        "CanVoteForOplog(s3,s2,t2)",
        "CanVoteForOplog(s3,s4,t2)",
        "CanVoteForOplog(s4,s1,t2)",
        "CanVoteForOplog(s4,s2,t2)",
        "CanVoteForOplog(s4,s3,t2)",
        "CanVoteForOplog(s1,s2,t3)",
        "CanVoteForOplog(s1,s3,t3)",
        "CanVoteForOplog(s1,s4,t3)",
        "CanVoteForOplog(s2,s1,t3)",
        "CanVoteForOplog(s2,s3,t3)",
        "CanVoteForOplog(s2,s4,t3)",
        "CanVoteForOplog(s3,s1,t3)",
        "CanVoteForOplog(s3,s2,t3)",
        "CanVoteForOplog(s3,s4,t3)",
        "CanVoteForOplog(s4,s1,t3)",
        "CanVoteForOplog(s4,s2,t3)",
        "CanVoteForOplog(s4,s3,t3)",
        "CanVoteForOplog(s1,s2,t4)",
        "CanVoteForOplog(s1,s3,t4)",
        "CanVoteForOplog(s1,s4,t4)",
        "CanVoteForOplog(s2,s1,t4)",
        "CanVoteForOplog(s2,s3,t4)",
        "CanVoteForOplog(s2,s4,t4)",
        "CanVoteForOplog(s3,s1,t4)",
        "CanVoteForOplog(s3,s2,t4)",
        "CanVoteForOplog(s3,s4,t4)",
        "CanVoteForOplog(s4,s1,t4)",
        "CanVoteForOplog(s4,s2,t4)",
        "CanVoteForOplog(s4,s3,t4)",

        "Fluent28_24[t1][q1]",
        "Fluent28_24[t1][q2]",
        "Fluent28_24[t1][q3]",
        "Fluent28_24[t2][q1]",
        "Fluent28_24[t2][q2]",
        "Fluent28_24[t2][q3]",
        "Fluent28_24[t3][q1]",
        "Fluent28_24[t3][q2]",
        "Fluent28_24[t3][q3]",
        "Fluent28_24[t4][q1]",
        "Fluent28_24[t4][q2]",
        "Fluent28_24[t4][q3]",

        "Fluent20_2[t1]",
        "Fluent20_2[t2]",
        "Fluent20_2[t3]",
        "Fluent20_2[t4]",

        "Fluent21_2[t1]",
        "Fluent21_2[t2]",
        "Fluent21_2[t3]",
        "Fluent21_2[t4]",

        "Fluent19_2[t1][s1]",
        "Fluent19_2[t1][s2]",
        "Fluent19_2[t1][s3]",
        "Fluent19_2[t1][s4]",
        "Fluent19_2[t2][s1]",
        "Fluent19_2[t2][s2]",
        "Fluent19_2[t2][s3]",
        "Fluent19_2[t2][s4]",
        "Fluent19_2[t3][s1]",
        "Fluent19_2[t3][s2]",
        "Fluent19_2[t3][s3]",
        "Fluent19_2[t3][s4]",
        "Fluent19_2[t4][s1]",
        "Fluent19_2[t4][s2]",
        "Fluent19_2[t4][s3]",
        "Fluent19_2[t4][s4]",

        "Fluent18_2[t1][s1]",
        "Fluent18_2[t1][s2]",
        "Fluent18_2[t1][s3]",
        "Fluent18_2[t1][s4]",
        "Fluent18_2[t2][s1]",
        "Fluent18_2[t2][s2]",
        "Fluent18_2[t2][s3]",
        "Fluent18_2[t2][s4]",
        "Fluent18_2[t3][s1]",
        "Fluent18_2[t3][s2]",
        "Fluent18_2[t3][s3]",
        "Fluent18_2[t3][s4]",
        "Fluent18_2[t4][s1]",
        "Fluent18_2[t4][s2]",
        "Fluent18_2[t4][s3]",
        "Fluent18_2[t4][s4]",

        "Fluent17_6[t1]",
        "Fluent17_6[t2]",
        "Fluent17_6[t3]",
        "Fluent17_6[t4]",

        "Fluent16_6[t1]",
        "Fluent16_6[t2]",
        "Fluent16_6[t3]",
        "Fluent16_6[t4]",

        "Fluent2[t1][t2]",
        "Fluent2[t1][t3]",
        "Fluent2[t1][t4]",
        "Fluent2[t2][t1]",
        "Fluent2[t2][t3]",
        "Fluent2[t2][t4]",
        "Fluent2[t3][t1]",
        "Fluent2[t3][t2]",
        "Fluent2[t3][t4]",
        "Fluent2[t4][t1]",
        "Fluent2[t4][t2]",
        "Fluent2[t4][t3]"
    ],
    "preds_alt" : [],
    "safety"  :  "Safety",
    "constants"  : [
        "CONSTANTS" ,
        "Server = {n1,n2,n3}",
        "FinNat = {1,2}",
        "Quorums = {{n1,n2},{n1,n3},{n2,n3},{n1,n2,n3}}",
        "n1=n1",
        "n2=n2",
        "n3=n3"
    ],
    "constraint"  :  "CONSTRAINT StateConstraint",
    "quant_inv"  :  "\\A s1 \\in Server : \\A s2 \\in Server : \\A t1 \\in FinNat : \\A t2 \\in FinNat : \\A q1 \\in Quorums : \\E s3 \\in Server : \\E t3 \\in FinNat : \\E q2 \\in Quorums : \\A s4 \\in Server : \\A t4 \\in FinNat : \\A q3 \\in Quorums : ",
    "quant_inv_alt"  :  null,
    "quant_vars": ["s1","s2","s3","s4","t1","t2","t3","t4","q1","q2","q3"],
    "model_consts"  :  "CONSTANT n1,n2,n3",
    "symmetry" : true,
    "typeok"  :  "TypeOKRand",
    "simulate"  :  true,
    "tlaps_proof_config": {
        "assumes": [
        ],
        "lemma_def_expands": {
        },
        "action_def_expands":{
        }
    }    
}
